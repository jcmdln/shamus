# Snagem API v1 Specification
# http://spec.openapis.org/oas/v3.0.3
#
# Please note that this is a work-in-progress which is likely to change
# drastically as well as without warning. This notice will be removed once this
# is no longer the case.

#
# Components
#

components:
  schemas:
    Media:
      type: object
      required:
        - mediaType
      properties:
        mediaType:
          type: string

    Audio:
      allOf:
        - $ref: "#components/schemas/Media"
        - type: object
          properties:
            duration:
              type: integer
            format:
              type: string
            language:
              type: string
            lyrics:
              type: string
            name:
              type: string
            size:
              type: string
            source:
              type: string
            tags:
              type: array

    Video:
      allOf:
        - $ref: "#components/schemas/Media"
        - type: object
          properties:
            duration:
              type: integer
            format:
              type: string
            language:
              type: string
            name:
              type: string
            size:
              type: string
            source:
              type: string
            subtitles:
              type: array
            tags:
              type: array

    Role:
      type: object
      required:
        - roleType
      properties:
        roleType:
          type: string

    Admin:
      allOf:
        - $ref: "#components/schemas/Role"

    Moderator:
      allOf:
        - $ref: "#components/schemas/Role"

    User:
      allOf:
        - $ref: "#components/schemas/Role"

#
# Endpoints
#

endpoints:
  /:
    get:
      description: Returns all media the user has access to
      responses:
        "200":
          description: A list of media
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Media"

  /{media_id}:
    get:
      description: Returns information about {media_id} the user has access to
      responses:
        "200":
          description: An object of media properties
          content:
            application/json:
              schema:
                type: object
                  $ref: "#/components/schemas/Media"

  /{user_id}:
    get:
      description: Returns all media of {user_id} the user has access to
      responses:
        "200":
          description: A list of media
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

  /{playlist_id}:
    get:
      description: >-
        Returns all media from the {playlist_id} the user has access to
      responses:
        "200":
          description: "A list of media"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Playlist"

  # Would like to offer a few different auth methods:
  #   - Traditional user/password
  #   - GitHub Oauth2
  #   - GitLab Oauth2?
  #   - Google Oauth2
  #   - etc
  /auth:

  # What sort of metrics should be displayed?
  #   - A way to disable collecting arbitrary metrics, or all metrics
  #   - hourly/daily/weekly/monthly/yearly timelines?
  #   - etc
  /metrics:

  # The exact mechanics of accessing/updating settings need to be worked out.
  /settings:
    get:
      description: placeholder
      responses:
        "200":
          description: placeholder
          content:
            application/json:
              schema:
                type: object

  # Allow admins to control media settings:
  #   - Default format(s)
  #   - Min/Max resolution
  #   - Maximum file size
  #   - etc
  /settings/media:
    get:
      description: placeholder
      responses:
        "200":
          description: placeholder
          content:
            application/json:
              schema:
                type: object

  # Allow admins to control metadata settings:
  #   - Enable/Disable all metrics
  #   - Enable/Disable specific metric(s)
  #   - Public/private specific metric(s)
  #   - etc
  /settings/metrics:
    get:
      description: placeholder
      responses:
        "200":
          description: placeholder
          content:
            application/json:
              schema:
                type: object

  # Need to be able to adjust per-user or all-user settings like:
  #   - Quotas
  #   - Rate Limiting
  #   - Source domain restrictions (is use can only save from YouTube, etc)
  #   - etc
  /settings/users:
    get:
      description: placeholder
      responses:
        "200":
          description: placeholder
          content:
            application/json:
              schema:
                type: object
