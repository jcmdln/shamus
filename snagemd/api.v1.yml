# Snagem API v1 Specification
# http://spec.openapis.org/oas/v3.0.3
#
# Please note that this is a work-in-progress which is likely to change
# drastically as well as without warning. This notice will be removed once this
# is no longer the case.

#
# Components
#

components:
  schemas:
    Media:
      type: object
      required:
        - mediaType
      properties:
        mediaType:
          type: string

    Audio:
      allOf:
        - $ref: "#components/schemas/Media"
        - type: object
          properties:
            duration:
              type: integer
            format:
              type: string
            language:
              type: string
            lyrics:
              type: string
            name:
              type: string
            size:
              type: string
            source:
              type: string
            tags:
              type: array

    Video:
      allOf:
        - $ref: "#components/schemas/Media"
        - type: object
          properties:
            duration:
              type: integer
            format:
              type: string
            language:
              type: string
            name:
              type: string
            size:
              type: string
            source:
              type: string
            subtitles:
              type: array
            tags:
              type: array

    Role:
      type: object
      required:
        - roleType
      properties:
        roleType:
          type: string

    Admin:
      allOf:
        - $ref: "#components/schemas/Role"

    Moderator:
      allOf:
        - $ref: "#components/schemas/Role"

    User:
      allOf:
        - $ref: "#components/schemas/Role"

#
# Endpoints
#

endpoints:
  /:
    get:
      description: Returns all media the user has access to

  /{media_id}:
    get:
      description: Returns information about {media_id} the user has access to

  /{user_id}:
    get:
      description: Returns all media of {user_id} the user has access to

  /{playlist_id}:
    get:
      description: Returns all media from a {playlist_id} the user has access to

  # Would like to offer a few different auth methods:
  #   - Traditional user/password
  #   - GitHub Oauth2
  #   - GitLab Oauth2?
  #   - Google Oauth2
  #   - etc
  /auth:
    get:
      description:

  /metrics:
    get:
      description: Returns all metrics the user has access to

  /metrics/storage:
    get:
      description: Returns all storage metrics the user has access to

  /settings:
    get:
      description: Return all settings the user has access to

  /settings/media:
    get:
      description: Returns the current media settings the user has access to

  /settings/media/format:
    get:
      description: Returns the formatting setting for all media types
    put:
      description: Modifies the formatting setting for all media types

  /settings/metrics:
    get:
      description: Returns metrics settings the user has access to

  /settings/metrics/enabled:
    get:
      description: Returns whether metrics are enabled
    put:
      description: Modifies whether metrics are to be collected

  /settings/metrics/storage:
    get:
      description: Returns storage metrics settings the user has access to

  /settings/metrics/storage/enabled:
    get:
      description: Returns whether storage metrics are enabled
    put:
      description: Modifies whether storage metrics are to be collected

  /settings/sources:
    get:
      description: Return the settings for all sources the user has access to

  /settings/users: # admin only
    get:
      description: Returns the settings for all users

  /settings/users/domains: # admin only
    get:
      description: Returns the allowed domains settings for all users
    put:
      description:

  /settings/users/ratelimit: # admin only
    get:
      description: Returns the rate limit settings for all users
    put:
      description:

  /settings/users/quotas: # admin only
    get:
      description: Returns the quota settings for all users
    put:
      description:

  /settings/users/{user_id}:
    get:
      description: Returns the settings for {user_id}

  /settings/users/{user_id}/domains:
    get:
      description: Returns the allowed domains settings for {user_id}
    put: # admin only
      description:

  /settings/users/{user_id}/ratelimit:
    get:
      description: Returns the rate limit settings for {user_id}
    put: # admin only
      description:

  /settings/users/{user_id}/quotas:
    get:
      description: Returns the quota settings for {user_id}
    put: # admin only
      description:

  /sources:
    get:
      # Datetime, Title, Author, Duration, Size
      description: Returns all sources the user has access to

  /sources/add:
    post:
      description: Returns all media found at the provided source

  /sources/remove:
    delete:
      description: Returns the status of deleting a source
